% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BiostatsSingleCell.R
\name{BiostatsSingleCell}
\alias{BiostatsSingleCell}
\title{R6 Class representing a multi-sample sc/snRNA-Seq dataset}
\description{
A sc/snRNA-Seq experiment will usually be analyzing a cell by gene count matrix and a set of meta data for each cell
}
\details{
All of the components of the dataset are held within the R6 Class
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BiostatsSingleCell$new()}}
\item \href{#method-make_QCplots}{\code{BiostatsSingleCell$make_QCplots()}}
\item \href{#method-apply_filter}{\code{BiostatsSingleCell$apply_filter()}}
\item \href{#method-apply_filter_R6}{\code{BiostatsSingleCell$apply_filter_R6()}}
\item \href{#method-subset}{\code{BiostatsSingleCell$subset()}}
\item \href{#method-down_sample}{\code{BiostatsSingleCell$down_sample()}}
\item \href{#method-set_group_mode}{\code{BiostatsSingleCell$set_group_mode()}}
\item \href{#method-set_cluster_mode}{\code{BiostatsSingleCell$set_cluster_mode()}}
\item \href{#method-apply_filter_contrasts_R6}{\code{BiostatsSingleCell$apply_filter_contrasts_R6()}}
\item \href{#method-t_test_pipeline}{\code{BiostatsSingleCell$t_test_pipeline()}}
\item \href{#method-ancova_pipeline}{\code{BiostatsSingleCell$ancova_pipeline()}}
\item \href{#method-u_test_pipeline}{\code{BiostatsSingleCell$u_test_pipeline()}}
\item \href{#method-edgeR_pipeline}{\code{BiostatsSingleCell$edgeR_pipeline()}}
\item \href{#method-limma_pipeline}{\code{BiostatsSingleCell$limma_pipeline()}}
\item \href{#method-limma_cell_level_pipeline}{\code{BiostatsSingleCell$limma_cell_level_pipeline()}}
\item \href{#method-DESeq2_pipeline}{\code{BiostatsSingleCell$DESeq2_pipeline()}}
\item \href{#method-nebula_pipeline}{\code{BiostatsSingleCell$nebula_pipeline()}}
\item \href{#method-glmmTMB_pipeline}{\code{BiostatsSingleCell$glmmTMB_pipeline()}}
\item \href{#method-MAST_pipeline}{\code{BiostatsSingleCell$MAST_pipeline()}}
\item \href{#method-violinPlot}{\code{BiostatsSingleCell$violinPlot()}}
\item \href{#method-volcanoPlot}{\code{BiostatsSingleCell$volcanoPlot()}}
\item \href{#method-assayData}{\code{BiostatsSingleCell$assayData()}}
\item \href{#method-pseudoBulkData}{\code{BiostatsSingleCell$pseudoBulkData()}}
\item \href{#method-pData}{\code{BiostatsSingleCell$pData()}}
\item \href{#method-get_cells}{\code{BiostatsSingleCell$get_cells()}}
\item \href{#method-get_genes}{\code{BiostatsSingleCell$get_genes()}}
\item \href{#method-get_MT}{\code{BiostatsSingleCell$get_MT()}}
\item \href{#method-get_lib_sizes}{\code{BiostatsSingleCell$get_lib_sizes()}}
\item \href{#method-get_av_lib_size}{\code{BiostatsSingleCell$get_av_lib_size()}}
\item \href{#method-get_norm_counts}{\code{BiostatsSingleCell$get_norm_counts()}}
\item \href{#method-get_DE_results}{\code{BiostatsSingleCell$get_DE_results()}}
\item \href{#method-get_filter_info}{\code{BiostatsSingleCell$get_filter_info()}}
\item \href{#method-clone}{\code{BiostatsSingleCell$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Creates a biostats single cell object which supports multi-sample sc/sn RNAseq dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$new(
  count_file = NULL,
  meta_file = NULL,
  sampleId_col = NULL,
  treatment_col = NULL,
  cluster_col = NULL,
  count_data = NULL,
  meta_data = NULL,
  rds_file = NULL,
  mode = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{count_file}}{character string representing count file to be read (must be a file type supported by fread. See \link[data.table]{fread} for details.)}

\item{\code{meta_file}}{character string representing meta data file to be read (must be a file type supported by fread. See \link[data.table]{fread} for details.)}

\item{\code{sampleId_col}}{character string representing a column in meta data that contains sample ID information}

\item{\code{treatment_col}}{character string representing a column in meta data that contains treatment information}

\item{\code{cluster_col}}{character string representing a column in meta data that contains information of the cell's cell type or cluster}

\item{\code{count_data}}{a count data matrix in sparse matrix format. See \link[Matrix]{sparseMatrix} for details.}

\item{\code{meta_data}}{meta data in data frame format}

\item{\code{rds_file}}{character string representing rds file for input}

\item{\code{mode}}{internal use}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
There are three different examples to initializing a new \code{BiostatsSingleCell} object.
\itemize{
\item Example 1 : Initialize object using \code{count_file},\code{meta_file},\code{sampleId_col},\code{treatment_col}, and \code{cluster_col} arguments.
This will read single cell data into memory from \code{count_file} (rows are genes, columns are cells.  Gene names are in the first column, and rownames are cell names).
Meta data will be read from \code{meta_file}.
Sample Ids, treatments, and clusters are in columns \code{sampleId_col},\code{treatment_col}, and \code{cluster_col} of the meta data.
\item Example 2 : Initialize object using \code{count_data} \code{meta_data}, \code{sampleId_col},\code{treatment_col}, and \code{cluster_col} arguments.
This will initialize using a sparse matrix count table (rows are genes, columns are cells, gene names are in the row names, and cell names are in the columns names).
Meta data will be initialized using a data frame.
Sample Ids, treatments, and clusters are in columns \code{sampleId_col},\code{treatment_col}, and \code{cluster_col} of the meta data.
\item Example 3 : Initialize object using \code{rds_file},\code{sampleId_col},\code{treatment_col}, and \code{cluster_col} arguments.
This will read single cell data into memory from an \code{rds_file} assuming there is a meta.data slot that includes sample Id, treatment, and cluster information.
}
}

\subsection{Returns}{
a new \code{BiostatsSingleCell} R6 object containing counts, cells, genes, meta data, MT rows, normalized counts, and pseudo bulk counts
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-make_QCplots"></a>}}
\subsection{Method \code{make_QCplots()}}{
Creates a number of QC plots for the sc/snRNAseq data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$make_QCplots(out_file)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{out_file}}{character vector representing the file name of an output pdf file of QC plots}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-apply_filter"></a>}}
\subsection{Method \code{apply_filter()}}{
Applies the 1st round of biostats filtering pipeline.  Note that this filter is applied to all cells of the experiment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$apply_filter(
  MTfilter = TRUE,
  lib_size_low = 200,
  lib_size_high = 20 * 10^6,
  min.cells.per.gene = 50,
  min.genes.per.cell = 500,
  min.perc.cells.per.gene = 0.01,
  perc_filter = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{MTfilter}}{if TRUE, then remove mitochondrial genes.  Default is TRUE.}

\item{\code{lib_size_low, lib_size_high}}{only keep cells that have a library size between lib_size_low and lib_size_high (inclusive).  Defaults are 200 <= lib_size <= 20,000,000}

\item{\code{min.cells.per.gene}}{if \code{perc_filter} is FALSE, then keep only genes that have expression in at least min.cells.per.gene.  Default is 50.}

\item{\code{min.genes.per.cell}}{keep cells with expression in at least min.genes.per.cell genes.  Default is 500.}

\item{\code{min.perc.cells.per.gene}}{if \code{perc_filter} is TRUE, then keep only genes that have expression in at least min.per.cells.per.gene * 100 percent of cells.  Default is 0.01.}

\item{\code{perc_filter}}{if TRUE, apply the cells.per.gene filter using percentages (expressed as a decimal) rather than an absolute threshold.  Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None: This function will filter your R6 object in-place.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-apply_filter_R6"></a>}}
\subsection{Method \code{apply_filter_R6()}}{
Applies the 1st round of biostats filtering pipeline. Note that this filter is applied to all cells of the experiment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$apply_filter_R6(
  MTfilter = TRUE,
  lib_size_low = 200,
  lib_size_high = 20 * 10^6,
  min.cells.per.gene = 50,
  min.genes.per.cell = 500,
  min.perc.cells.per.gene = 0.01,
  perc_filter = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{MTfilter}}{if TRUE, then remove mitochondrial genes.  Default is TRUE.}

\item{\code{lib_size_low, lib_size_high}}{only keep cells that have a library size between lib_size_low and lib_size_high (inclusive).  Defaults are 200 <= lib_size <= 20,000,000}

\item{\code{min.cells.per.gene}}{if \code{perc_filter} is FALSE, then keep only genes that have expression in at least min.cells.per.gene.  Default is 50.}

\item{\code{min.genes.per.cell}}{keep cells with expression in at least min.genes.per.cell genes.  Default is 500.}

\item{\code{min.perc.cells.per.gene}}{if \code{perc_filter} is TRUE, then keep only genes that have expression in at least min.per.cells.per.gene * 100 percent of cells.  Default is 0.01.}

\item{\code{perc_filter}}{if TRUE, apply the cells.per.gene filter using percentages (expressed as a decimal) rather than an absolute threshold.  Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a new R6 object representing the data after one round of filtering
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-subset"></a>}}
\subsection{Method \code{subset()}}{
Subsets your R6 object based on a provided condition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$subset(condition)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{condition}}{a logical condition which uses the columns of the meta data}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
For example: sce_subset <- filterR1$subset(Disease.x \%in\% c('SPMS')) subsets to cells with value 'SPMS' in Disease.x column of meta data
}

\subsection{Returns}{
An R6 object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-down_sample"></a>}}
\subsection{Method \code{down_sample()}}{
Downsamples cells to a specified number
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$down_sample(number)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{number}}{function will downsample the cells to the amount specified by number}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
for example, sce_down <- sce_qc$down_sample(775) returns an object with 775 cells
}

\subsection{Returns}{
R6 object with downsampled counts and meta data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_group_mode"></a>}}
\subsection{Method \code{set_group_mode()}}{
Sets DE analysis to "group" mode (i.e. comparing groups within a specified cell type)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$set_group_mode(cluster_of_interest, ref_group, alt_group)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cluster_of_interest}}{character string representing cell type of interest}

\item{\code{ref_group}}{character string representing reference group, or a character vector of reference groups}

\item{\code{alt_group}}{character string representing non-reference group, or a character vector of non-reference groups}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_cluster_mode"></a>}}
\subsection{Method \code{set_cluster_mode()}}{
Sets DE analysis to "cluster" mode (i.e. comparing clusters/cell types within a specific group)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$set_cluster_mode(
  group_of_interest,
  ref_cluster,
  alt_cluster = "others"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{group_of_interest}}{character string representing the group of interest}

\item{\code{ref_cluster}}{character string representing the reference cluster or character vector of reference clusters}

\item{\code{alt_cluster}}{character string representing the non-reference cluster or a character vecotr of non-reference clusters.  Alternatively, all clusters that are not in \code{ref_cluster} can be selected by using the character string "others"}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-apply_filter_contrasts_R6"></a>}}
\subsection{Method \code{apply_filter_contrasts_R6()}}{
Apply the 2nd round of biostats filtering.  For "group" mode, the filtering is applied to \code{ref_group} and \code{alt_group} for the given cell type of interest.
For "cluster" mode, the filtering is applied to \code{ref_cluster} and \code{alt_cluster} for a given group of interest.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$apply_filter_contrasts_R6(
  min.cells.per.gene = 50,
  min.perc.cells.per.gene = 0.1,
  perc.cells.filter = T,
  min.cells.per.gene.type = "and",
  cells.per.gene.filter = T,
  perc.filter = T,
  perc.filter.type = "and",
  perc_threshold = 0.75,
  min.ave.pseudo.bulk.cpm = 1,
  pseudo.bulk.cpm.filter = T,
  min.cells.per.subj = 5
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{min.cells.per.gene}}{minimum cells expressed per gene.  This filter is applied if \code{perc.cells.filter} is FALSE.}

\item{\code{min.perc.cells.per.gene}}{minimum \% cells expressed per gene (use decimal form of percentage).  This threshold is applied if \code{perc.cells.filter} is TRUE and \code{cells.per.gene.filter} is TRUE.  Default is 0.10, but recent simulations suggest 0.05 is better.}

\item{\code{perc.cells.filter}}{TRUE means apply cell.per.gene filtering by use of a percentage rather than absolute threshold.  If the percentage results in a number less than min.cells.per.gene, the code will automatically switch to min.cells.per.gene absolute thresholding. Default is TRUE.}

\item{\code{min.cells.per.gene.type}}{The type of cell per gene filtering.  If it has the value "and" then it requires the gene be expressed in both reference and non-reference groups. If it has the value "or" then it requires the gene be expressed in either group.  Default is "and".}

\item{\code{cells.per.gene.filter}}{TRUE means apply cells per gene filtering.  Default is TRUE.}

\item{\code{perc.filter}}{If TRUE, then apply the 75th percentile gene filtering.  Default is TRUE.}

\item{\code{perc.filter.type}}{The type of percentile gene filtering.  If it has the value "and" then any gene that has 75th percentile of zero in both groups will be filtered out.  If it has the value "or" then any gene that has a 75th percentile of zero in either group will be filtered out.  Default is "and".}

\item{\code{perc_threshold}}{Percentile threshold, 75th percentile is default.  Express percentile as a decimal value.}

\item{\code{min.ave.pseudo.bulk.cpm}}{cpm filtering threshold.  Default is 1.}

\item{\code{pseudo.bulk.cpm.filter}}{if TRUE, then apply a cpm filter on the pseudo-bulk counts.  Default is TRUE.}

\item{\code{min.cells.per.subj}}{Minimum cells required per subject, must be a nonzero number.  Default is 5 cells per subject.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new R6 object with the filtered counts and the filtered meta data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-t_test_pipeline"></a>}}
\subsection{Method \code{t_test_pipeline()}}{
Runs the pseudo-bulk DE t-test pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$t_test_pipeline()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ancova_pipeline"></a>}}
\subsection{Method \code{ancova_pipeline()}}{
Runs the pseudo-bulk ancova pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$ancova_pipeline(covs = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{A vector of character strings representing your covariates.  These strings must be present as names of columns in the meta data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-u_test_pipeline"></a>}}
\subsection{Method \code{u_test_pipeline()}}{
Runs the pseudo-bulk u-test DE pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$u_test_pipeline()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-edgeR_pipeline"></a>}}
\subsection{Method \code{edgeR_pipeline()}}{
Runs the pseudo-bulk edgeR DE pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$edgeR_pipeline(covs = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing your covariates}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-limma_pipeline"></a>}}
\subsection{Method \code{limma_pipeline()}}{
Runs the pseudo-bulk limma DE pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$limma_pipeline(covs = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing your covariates}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-limma_cell_level_pipeline"></a>}}
\subsection{Method \code{limma_cell_level_pipeline()}}{
Runs the cell-level limme DE pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$limma_cell_level_pipeline(
  covs = NULL,
  covs_formula = NULL,
  remove_subj = TRUE,
  cell_level_covs = NULL,
  cell_level_covs_formula = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing subject-level covariates}

\item{\code{covs_formula}}{default NULL}

\item{\code{remove_subj}}{default TRUE}

\item{\code{cell_level_covs}}{vector of character strings representing cell-level covariates}

\item{\code{cell_level_covs_formula}}{default NULL}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DESeq2_pipeline"></a>}}
\subsection{Method \code{DESeq2_pipeline()}}{
Runs the pseudo-bulk DESeq2 pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$DESeq2_pipeline(
  covs = NULL,
  shrink = TRUE,
  parallel = FALSE,
  independent_filtering = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing subject-level covariates}

\item{\code{shrink}}{if TRUE, apply shrinkage.  Default is TRUE.}

\item{\code{parallel}}{if TRUE, then use parallel computation.  User is required to register cores with BiocParallel.  Default is FALSE.}

\item{\code{independent_filtering}}{if TRUE, then use DESeq2 internal gene filtering.  Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nebula_pipeline"></a>}}
\subsection{Method \code{nebula_pipeline()}}{
Runs the nebula DE pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$nebula_pipeline(covs = NULL, method = "HL")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing the covariates}

\item{\code{method}}{the method to select for running Nebula DE.  Options are "LN" or "HL". Default is "HL".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glmmTMB_pipeline"></a>}}
\subsection{Method \code{glmmTMB_pipeline()}}{
Runs the glmmTMB pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$glmmTMB_pipeline(
  covs = NULL,
  family = "nbinom2",
  cores = 4,
  detection_rate = FALSE,
  input_lib_sizes = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing covariates}

\item{\code{family}}{model to use.  Options are "nbinom2", "nbinom1", "poisson", "nbinom2zi", or "nbinom1zi".  Default is "nbinom2".}

\item{\code{cores}}{number of cores to use, the code will register the cores automatically.  cores = 4 by default.}

\item{\code{detection_rate}}{if TRUE, use detection rate as a covariate.  Default is FALSE.}

\item{\code{input_lib_sizes}}{Default is NULL.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAST_pipeline"></a>}}
\subsection{Method \code{MAST_pipeline()}}{
Runs the MAST pipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$MAST_pipeline(
  covs = NULL,
  method = "glmer",
  ebayes = FALSE,
  detection_rate = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covs}}{vector of character strings representing covariates}

\item{\code{method}}{method to use for MAST pipeline.  Options are "glm", "glmer", "bayesglm".  Default is "glmer".}

\item{\code{ebayes}}{if TRUE, MAST will use empirical bayes.  Default is FALSE.}

\item{\code{detection_rate}}{if TRUE, use detection rate as a covariate.  Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of DE results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-violinPlot"></a>}}
\subsection{Method \code{violinPlot()}}{
Creates a violin plot
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$violinPlot(
  countsdata = NULL,
  meta = NULL,
  cellinfo = NULL,
  xgroup = NULL,
  colorgroup = NULL,
  gene.name = "",
  de.method = "glmmTMB",
  batch = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{countsdata}}{takes a matrix of counts data.  Default is NULL.}

\item{\code{meta}}{takes a data frame of meta data.  Default is NULL.}

\item{\code{cellinfo}}{character string for column of metadata representing cell barcodes}

\item{\code{xgroup}}{takes a column name in the meta data corresponding to the x-axis grouping of interest.  Default is NULL.}

\item{\code{colorgroup}}{takes a column name in the meta data corresponding to the fill color grouping of interest.  Default is NULL.}

\item{\code{gene.name}}{character string for a gene of interest}

\item{\code{de.method}}{which DE results table to use in annotating the plot.  Default is "glmmTMB".}

\item{\code{batch}}{takes a column name in the meta data corresponding to the point color grouping of interest.  Default is NULL.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A ggplot
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-volcanoPlot"></a>}}
\subsection{Method \code{volcanoPlot()}}{
Creates a volcano plot
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$volcanoPlot(
  FDR_threshold = 0.05,
  FC_threshold = 1,
  de.method = NULL,
  title = "Volcano Plot"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{FDR_threshold}}{your desired FDR threshold. Default is 0.05.}

\item{\code{FC_threshold}}{your desiged FC threshold. Default is 1.}

\item{\code{de.method}}{A character string for which DE results table to use.  Default is NULL.}

\item{\code{title}}{A character string for the title of your plot.  Default is "Volcano Plot".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A ggplot
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-assayData"></a>}}
\subsection{Method \code{assayData()}}{
Returns the count matrix slot of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$assayData()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The sparse matrix representation of the counts
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pseudoBulkData"></a>}}
\subsection{Method \code{pseudoBulkData()}}{
Returns the pseudobulk data slot of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$pseudoBulkData()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An R matrix of the pseudobulk data slot
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pData"></a>}}
\subsection{Method \code{pData()}}{
Returns the meta data slot of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$pData()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An R data frame of the meta data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_cells"></a>}}
\subsection{Method \code{get_cells()}}{
Return the cells slot of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_cells()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of character strings of cell barcodes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_genes"></a>}}
\subsection{Method \code{get_genes()}}{
Return the gene slot of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_genes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of character strings of gene names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_MT"></a>}}
\subsection{Method \code{get_MT()}}{
Return the MT genes of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_MT()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
vector of row indexes for MT genes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_lib_sizes"></a>}}
\subsection{Method \code{get_lib_sizes()}}{
Return the library sizes of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_lib_sizes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric vector of library sizes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_av_lib_size"></a>}}
\subsection{Method \code{get_av_lib_size()}}{
Return the average library size of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_av_lib_size()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric vector of the average library size
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_norm_counts"></a>}}
\subsection{Method \code{get_norm_counts()}}{
Return the normalized counts of the R6 object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_norm_counts()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
normalized counts as a sparse matrix
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_DE_results"></a>}}
\subsection{Method \code{get_DE_results()}}{
Return the DE pipeline results
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_DE_results()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a list of DE result data frames for each DE pipeline that has been executed.  Each element of the list is a data frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_filter_info"></a>}}
\subsection{Method \code{get_filter_info()}}{
Returns a record of each gene that has been filtered out and why.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$get_filter_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing:
\itemize{
\item MT_gene : A list of genes removed due to MT filtering
\item less_cell_num : A list of genes which were filtered out due to cells.per.gene filter of round 1 filtering
\item less_cell_num_group : A list of genes which were filtered out during 2nd round of filtering due to cell.per.gene filter
\item 75\%_percentile_zero_group : A list of genes which were filtered out during 2nd round of filtering due to 75th percentile filter
\item low_cpm : A list of genes which were filtered out due to low cpm
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiostatsSingleCell$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
